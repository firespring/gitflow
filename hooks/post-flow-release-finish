#!/bin/sh
#
# Runs at the end of git flow release start
#
# Positional arguments:
# $1    The version (including the version prefix)
# $2    The origin remote
# $3    The full branch name (including the release prefix)
# $4    The base from which this release is started
#
# The following variables are available as they are exported by git-flow:
#
# MASTER_BRANCH - The branch defined as Master
# DEVELOP_BRANCH - The branch defined as Develop
#
VERSION=$1
ORIGIN=$2
BRANCH=$3
BASE=$4

if [ -f ~/.tp_credentials ]; then
  . ~/.tp_credentials
elif [ -f ~/.env ]; then
  . ~/.env
fi

if [ "$TP_USERNAME" != "" ] && [ "$TP_PASSWORD" != "" ] && [ "$TP_URL" != "" ]; then
  # Find the id of the release we are finishing
  RELEASE_ID="`curl --silent --user $TP_USERNAME:$TP_PASSWORD https://$TP_URL/api/v1/Releases -d "where=Name eq '$VERSION'" --request GET --header "Accept: application/json" | egrep '"Id"' | head -1 | sed -E "s@[^0-9]*([0-9]+).*@\1@g"`"

  if [ "$RELEASE_ID" != "" ]
  then
    # Set the end date to today
    curl --silent --user $TP_USERNAME:$TP_PASSWORD https://$TP_URL/api/v1/Releases/$RELEASE_ID --header "Content-Type: application/json" --data "
      {
        EndDate: '`date +"%Y-%m-%d"`'
      }
    " >> /tmp/git-flow.hooks.log 2>&1
  fi
else
  echo -e "\n ** WARNING: Targetprocess user information is not configured. Skipping targetprocess updates **\n"
fi

exit 0
